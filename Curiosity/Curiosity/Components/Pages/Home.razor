@page "/"
@using Plugin.BLE
@using Plugin.BLE.Abstractions
@using Plugin.BLE.Abstractions.Contracts
@using Plugin.BLE.Abstractions.Exceptions

<h1>Hello, world!</h1>

Welcome to your new app.

<p>Bluetooth state: @bleState</p>


<button class="btn btn-primary" @onclick="OnScanButtonClicked">デバイスのスキャン</button>
<hr />
@foreach (var device in deviceList)
{
    <button class="btn btn-secondary" @onclick="() => OnDeviceSelected(device)">@device.Name (@device.Id)</button>
}

<p>@rawText</p>

@code {
    string bleState = "Unknown";
    string rawText = "No data received yet.";
    List<IDevice> deviceList = new List<IDevice>();
    IBluetoothLE ble = CrossBluetoothLE.Current;
    IAdapter adapter = CrossBluetoothLE.Current.Adapter;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        bleState = ble.State.ToString();
        ble.StateChanged += (s, e) =>
        {
            bleState = e.NewState.ToString();
            StateHasChanged();
        };
        adapter.DeviceDiscovered += (s, a) => deviceList.Add(a.Device);
        await adapter.StartScanningForDevicesAsync();
    }
    private async Task OnScanButtonClicked()
    {
        deviceList.Clear();
        await adapter.StartScanningForDevicesAsync();
    }
    private async Task OnDeviceSelected(IDevice device)
    {
        try
        {
            await adapter.ConnectToDeviceAsync(device);
            var services = await device.GetServicesAsync();
            var characteristics = await services[0].GetCharacteristicsAsync();
            foreach (var characteristic in characteristics)
            {
                characteristic.ValueUpdated += (o, args) =>
                {
                    var bytes = args.Characteristic.Value;
                    rawText = System.Text.Encoding.UTF8.GetString(bytes);
                    StateHasChanged();
                };
                await characteristic.StartUpdatesAsync();
            }

        }
        catch (DeviceConnectionException e)
        {
            // ... could not connect to device
        }
    }
}